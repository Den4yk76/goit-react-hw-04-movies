{"version":3,"sources":["components/MovieDetailsPage/MovieDetailsPage.module.css","components/Cast/Cast.module.css","components/Cast/Cast.js","components/Reviews/Reviews.js","components/MovieDetailsPage/MovieDetailsPage.js"],"names":["module","exports","Cast","movieId","movie_url","useState","cast","setCast","useEffect","axios","get","then","res","data","className","styles","castList","map","actor","actorImage","src","profile_path","alt","name","character","id","Reviews","reviews","setReviews","results","length","review","author","content","MovieDetailsPage","url","useRouteMatch","history","useHistory","location","useLocation","useParams","movie","setMovie","type","onClick","push","state","from","label","container","image","poster_path","filmInfo","title","release_date","vote_average","overview","ganresList","genres","genre","ganresListItem","to","pathname","path"],"mappings":"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","file":"static/js/MovieDetailsPage.e348385c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"goBackBtn\":\"MovieDetailsPage_goBackBtn__zQ0Bp\",\"goBackBtnLink\":\"MovieDetailsPage_goBackBtnLink__2Y2GL\",\"container\":\"MovieDetailsPage_container__24uYO\",\"image\":\"MovieDetailsPage_image__3s-40\",\"filmInfo\":\"MovieDetailsPage_filmInfo__3tgjw\",\"ganresList\":\"MovieDetailsPage_ganresList__3xyyg\",\"ganresListItem\":\"MovieDetailsPage_ganresListItem__36d6b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actorImage\":\"Cast_actorImage__2RDtM\"};","import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport styles from './Cast.module.css';\r\n\r\nexport default function Cast({ movieId }) {\r\n  const api_key = '?api_key=c65fb4b4036e2137b5346647b44aa2c0';\r\n  const movie_url = `https://api.themoviedb.org/3/movie/${movieId}/credits${api_key}`;\r\n\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(movie_url).then(res => setCast(res.data.cast));\r\n  }, [movie_url]);\r\n\r\n  return (\r\n    <ul className={styles.castList}>\r\n      {cast.map(actor => {\r\n        return (\r\n          <li key={actor.id}>\r\n            <img\r\n              className={styles.actorImage}\r\n              src={\r\n                actor.profile_path\r\n                  ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\r\n                  : 'https://static.wikia.nocookie.net/fastandfurious/images/8/8e/Dom.png'\r\n              }\r\n              alt=\"\"\r\n            />\r\n            <p>{actor.name}</p>\r\n            <p>Character: {actor.character}</p>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport styles from './Reviews.module.css';\r\n\r\nexport default function Reviews({ movieId }) {\r\n  const api_key = '?api_key=c65fb4b4036e2137b5346647b44aa2c0';\r\n  const movie_url = `https://api.themoviedb.org/3/movie/${movieId}/reviews${api_key}&page=1`;\r\n\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(movie_url).then(res => setReviews(res.data.results));\r\n  }, [movie_url]);\r\n\r\n  return (\r\n    <ul className={styles.castList}>\r\n      {reviews.length\r\n        ? reviews.map(review => {\r\n            return (\r\n              <li key={review.id}>\r\n                <b>Author: {review.author}</b>\r\n                <p>{review.content}</p>\r\n              </li>\r\n            );\r\n          })\r\n        : 'We don`t have any reviews for this movie'}\r\n    </ul>\r\n  );\r\n}\r\n","import {\r\n  useParams,\r\n  Link,\r\n  useRouteMatch,\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n  useLocation,\r\n} from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './MovieDetailsPage.module.css';\r\nimport Cast from '../Cast/Cast';\r\nimport Reviews from '../Reviews/Reviews';\r\n\r\nexport default function MovieDetailsPage() {\r\n  const { url } = useRouteMatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  const api_key = '?api_key=c65fb4b4036e2137b5346647b44aa2c0';\r\n  const base_movie_url = `https://api.themoviedb.org/3/movie/`;\r\n  const movie_url = base_movie_url + movieId + api_key;\r\n\r\n  useEffect(() => {\r\n    axios.get(movie_url).then(res => setMovie(res.data));\r\n  }, [movie_url]);\r\n\r\n  const handleClick = () => {\r\n    history.push(location.state.from ? location.state.from : '/');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={handleClick}>\r\n        {location?.state?.label ?? 'Back'}\r\n      </button>\r\n      {movie && (\r\n        <>\r\n          <div className={styles.container}>\r\n            <div>\r\n              <img\r\n                className={styles.image}\r\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div className={styles.filmInfo}>\r\n              <h2>\r\n                {movie.title} ({movie.release_date})\r\n              </h2>\r\n              <p>User score: {movie.vote_average}</p>\r\n              <h3>Overview</h3>\r\n              <p>{movie.overview}</p>\r\n              <h3>Genres</h3>\r\n              <ul className={styles.ganresList}>\r\n                {movie.genres.map(genre => {\r\n                  return (\r\n                    <li className={styles.ganresListItem} key={genre.id}>\r\n                      {genre.name}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <h2>Additional information</h2>\r\n          <ul>\r\n            <li>\r\n              <Link\r\n                to={{\r\n                  pathname: `${url}/cast`,\r\n                  state: {\r\n                    from: history.location.state.from\r\n                      ? history.location.state.from\r\n                      : '/movies',\r\n                    label: 'Back to movies from Cast',\r\n                  },\r\n                }}\r\n              >\r\n                Cast\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link\r\n                to={{\r\n                  pathname: `${url}/reviews`,\r\n                  state: {\r\n                    from: history.location.state.from,\r\n                    label: 'Back to movies from Reviews',\r\n                  },\r\n                }}\r\n              >\r\n                Reviews\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <hr />\r\n          <Switch>\r\n            <Route path=\"/movies/:movieId/cast\">\r\n              <Cast movieId={movieId} />\r\n            </Route>\r\n            <Route path=\"/movies/:movieId/reviews\">\r\n              <Reviews movieId={movieId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}